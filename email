#!/bin/sh
#
# /usr/lib/cups/backend/email - Script to send e-mail confirmations via the CUPS
#                               print server
#
# This program is a modified version of fax4cups, available at
# http://vigna.dsi.unimi.it/fax4CUPS/
#
###############################################################################
# Do not edit anything after this point unless you know what you are doing... #
#                                                                             #
# You can override all defaults below with global or queue specific files:    #
# - $CUPS_SERVERROOT/email             for global overrides                   #
# - $CUPS_SERVERROOT/email-<queue>     for queue specific overrides           #
###############################################################################

# SERVERROT typically points to /etc/cups
if [ -z "$CUPS_SERVERROOT" ]; then
    echo "ERROR:CUPS_SERVERROOT not set. When running in CUPS this should not happen." 1>&2
    exit 1
fi

# DATADIR typically points to /usr/share/cups; model subdirectory has ppds
if [ -z "$CUPS_DATADIR" ]; then
    echo "ERROR:CUPS_DATADIR not set. When running in CUPS this should not happen." 1>&2
    exit 1
fi

# The full and complete path to the mailx program
MAILCMD=/usr/bin/mailx

# The full path to the postscript to pdf program (ps2pdf)
PS2PDF=/usr/bin/epstopdf

# The text to send in the body of the e-mail.  The actual "printed" document is
# sent as a PDF attachment.
MAILTEXT="This is the text of the e-mail.  The actual data that was printed is sent as a .PDF file"

# The from address to use.
FROM=""

# The default method to get the send-to address (-j is from the jobname, -u is from the username).
TO="-j"

MAILRC=/dev/null

# A list of mailx variables to be exported (i.e., made available to mailx if
# set in the configuration files)
MAILX_VARS="from ORGANIZATION replyto sender sendwait signature smtp
 smtp-auth smtp-auth-password smtp-auth-user MAILRC"

if [ -f $CUPS_SERVERROOT/email ]; then
    . $CUPS_SERVERROOT/email
fi

if [ $# -eq 0 ]; then
    if [ ! -x "$MAILCMD" ]; then exit 1; fi
    if [ ! -x "$PS2PDF" ]; then exit 1; fi
    echo "virtual email \"Unknown\" \"E-Mail Device\""
fi

QUEUE=`echo $DEVICE_URI | cut -d '/' -f 2 -s`
if [ -n "$QUEUE" ]; then
    if [ -f $CUPS_SERVERROOT/email-default ]; then
        . $CUPS_SERVERROOT/email-default
    elif [ -f $CUPS_SERVERROOT/email-$QUEUE ]; then
        . $CUPS_SERVERROOT/email-$QUEUE
    fi
fi

if [ -z "$FROM" ]; then
    echo "ERROR:FROM is not defined" 1>&2
    exit 1
fi

for VAR in $MAILX_VARS; do
    export $VAR
done

# Parse user-specified options from the PostScript file and set -l/-m
function getSelectedOption() {
    for i in $@; do
        case $i in
            \**)
                SELOPT=${i#[*]};
                return
                ;;
        esac
    done
}

function parseOptions() {
    while read LINE; do
        echo "DEBUG:$LINE" 1>&2
        MAIN=${LINE%%:*}
        OPTIONS=${LINE##*:}
        getSelectedOption $OPTIONS

        case $MAIN in
            PageSize/*)
                echo "PAGE=$( echo -n "$SELOPT" | tr '[:upper:]' '[:lower:]' )"
                ;;
            Resolution/*)
                if [ "$SELOPT" == "204x98dpi" ]; then
                    echo "RES=-l";
                fi
                ;;
            To/*)
                if [ $SELOPT == "JobName" ]; then
                    echo "TO=-j"
                elif [ $SELOPT == "UserName" ]; then
                    echo "TO=-u"
                fi
                ;;
        esac
    done
}

eval $(lpoptions -p $PRINTER -l | parseOptions)
echo "DEBUG:TO=$TO" 1>&2

# loop over options. Extract custom strings, as well as overrides
# for the TO (user or job name as address) flag
echo "DEBUG:Options - $5" 1>&2
for opt in $5; do
    case "$opt" in
        To=UserName*)
            TO="-u"
            ;;
        To=JobName*)
            TO="-j"
            ;;
        ToAddress=*)
            TO_ADDRESS="${opt#ToAddress=}"
            TO_ADDRESS="${TO_ADDRESS#Custom.}"
            ;;
    esac
done

# if no to address was specified via options try to fall back to either
# job name or user name
if [ -z "$TO_ADDRESS" ]; then
    if [ "$TO" == "-j" ]; then
        TO_ADDRESS="$3";
    elif [ "$TO" == "-u" ]; then
        if [ -n "$DEFAULTDOMAIN" ]; then
            TO_ADDRESS="$2@$DEFAULTDOMAIN"
        else
            # this probably only works through local sendmail, not smtp
            TO_ADDRESS="$2";
        fi
    else
        echo "DEBUG:Unable to figure out TO" 1>&2
        exit 1
    fi
fi

echo 1>&2 # Apparently the first character emitted is somehow "eaten" by the reader
echo "DEBUG:E-mail Address - $EMAIL" 1>&2
if [ $# -eq 6 ]; then
    MAILFILE=$6
else
    MAILFILE=$(mktemp </dev/null /tmp/fax.XXXXXX) ||
        (echo "ERROR:Failed to create temporary file" 1>&2; exit 1)
    cat >$MAILFILE
fi

MAILPDF="$MAILFILE.pdf"

$PS2PDF $MAILFILE -o $MAILPDF

echo "$MAILTEXT" | $MAILCMD -n -r "$FROM" -s "$SENDTYPE" -a $MAILPDF $TO_ADDRESS
RC=$?

rm -f $MAILPDF
if [ $# -lt 6 ];then
    rm -f $MAILFILE
fi

echo "DEBUG:$MAILCMD returned $RC" 1>&2
exit $RC
